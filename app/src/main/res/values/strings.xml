<resources>
    <string name="app_name">Car PC</string>

    <string name="SUBSCRIBE">@a1</string>
    <string name="UNSUBSCRIBE">@a0</string>

    <string name="frag1_text">DASHBOARD SCREEN</string>
    <string name="frag2_text">CHARGE SCREEN</string>
    <string name="frag3_text">SETTINGS SCREEN</string>
    <string name="btnDashboardScreen">DASHBOARD</string>
    <string name="btnChargeScreen">CHARGE</string>
    <string name="btnSettingsScreen">SETTINGS</string>
    <string name="stack">add to Back Stack</string>

    <string name="hello_blank_fragment">EMPTY</string>
    <string name="ip_address">IP address</string>
    <string name="port">PORT</string>
    <string name="passed">PASSED</string>
    <string name="PORT">8080</string>
    <string name="ADDRESS">192.168.1.90</string>
    <string name="input_message">Write message</string>

    <!-- CONFIGURATOR -> Levels (BMS) -->
    <string name="CONFIGURATOR_Levels_Top_Description">
        In this group, voltage levels for the cells are configured. The levels are stored both on the main board and on all additional ones.</string>
    <string name="CONFIGURATOR_Levels_Bottom_Description">TODO: write description</string>

    <!-- CONFIGURATOR -> Current -->
    <string name="CONFIGURATOR_Current_description">Setting up the current sensor.\n
        To configure you need to use the terminal on the next tab</string>
    <string name="CONFIGURATOR_Current_help">1. INP TYPE:\n
        0 — Undefined\n
        1 — ADC\n
        2 — USART\n
        3 — RS485\n

        \n2. INP NUMBER\n
        for ADC only, else - 0\n

        \n3. ZERO LEVEL\n
        The value corresponding to zero current. Less is negative current. More is positive.\n
        For a USART input, this is the ADC value. It can be recognized by the diag/current command.
        In brackets is the value of the ADC.\n

        \n4. AMPER ON VOLT\n
        For ADC input, this is the multiplier of the transducer output voltage to current conversion.
        For example, we know that a 10 milliVolt (0.01 volt) change in voltage at the sensor output
        corresponds to a current of 1 Ampere. So the value of this parameter is equal to sts (1 / 0.01 = 100).\n
        For USART and RS485 input, this is the M multiplier in the formula C = M * Adc. ADC capacity
        (Adc) - 4096. If the sensor measures current from -400 to + 400A, we get a range of 800A.
        800/4096 = 0.195. Those. 195 mA per ADC unit. Considering that the return value in milliAmperes,
        this parameter is 195.\n

        \n5. MIN FIXED CURRENT\n
        Current value in milliAmperes. The minimum current value that is taken into account.
        For example, the current less than 1 ampere is not taken into account due to the sensor error.
        Temperature drift of the used electronic components leads to the fact that in the absence of
        real current, the device will \\\"catch\\\" a current of 0.5A or -0.7A. With a measured range
        of currents from -200A to + 200A, the minimum current in 1A will be 0.5%. Which matches the
        accuracy of most measuring instruments. The value is always rounded up to 100mA. The max
        parameter value is 25000mA.</string>


    <string-array name="inputTypesSpeed">
        <item>SP 1</item>
        <item>SP 2</item>
        <item>OPTO 1</item>
        <item>OPTO 2</item>
    </string-array>
    <string name="large_text">
        "Material is the metaphor.\n\n"

        "A material metaphor is the unifying theory of a rationalized space and a system of motion."
        "The material is grounded in tactile reality, inspired by the study of paper and ink, yet "
        "technologically advanced and open to imagination and magic.\n"
        "Surfaces and edges of the material provide visual cues that are grounded in reality. The "
        "use of familiar tactile attributes helps users quickly understand affordances. Yet the "
        "flexibility of the material creates new affordances that supercede those in the physical "
        "world, without breaking the rules of physics.\n"
        "The fundamentals of light, surface, and movement are key to conveying how objects move, "
        "interact, and exist in space and in relation to each other. Realistic lighting shows "
        "seams, divides space, and indicates moving parts.\n\n"

        "Bold, graphic, intentional.\n\n"

        "The foundational elements of print based design typography, grids, space, scale, color, "
        "and use of imagery guide visual treatments. These elements do far more than please the "
        "eye. They create hierarchy, meaning, and focus. Deliberate color choices, edge to edge "
        "imagery, large scale typography, and intentional white space create a bold and graphic "
        "interface that immerse the user in the experience.\n"
        "An emphasis on user actions makes core functionality immediately apparent and provides "
        "waypoints for the user.\n\n"

        "Motion provides meaning.\n\n"

        "Motion respects and reinforces the user as the prime mover. Primary user actions are "
        "inflection points that initiate motion, transforming the whole design.\n"
        "All action takes place in a single environment. Objects are presented to the user without "
        "breaking the continuity of experience even as they transform and reorganize.\n"
        "Motion is meaningful and appropriate, serving to focus attention and maintain continuity. "
        "Feedback is subtle yet clear. Transitions are efﬁcient yet coherent.\n\n"

        "3D world.\n\n"

        "The material environment is a 3D space, which means all objects have x, y, and z "
        "dimensions. The z-axis is perpendicularly aligned to the plane of the display, with the "
        "positive z-axis extending towards the viewer. Every sheet of material occupies a single "
        "position along the z-axis and has a standard 1dp thickness.\n"
        "On the web, the z-axis is used for layering and not for perspective. The 3D world is "
        "emulated by manipulating the y-axis.\n\n"

        "Light and shadow.\n\n"

        "Within the material environment, virtual lights illuminate the scene. Key lights create "
        "directional shadows, while ambient light creates soft shadows from all angles.\n"
        "Shadows in the material environment are cast by these two light sources. In Android "
        "development, shadows occur when light sources are blocked by sheets of material at "
        "various positions along the z-axis. On the web, shadows are depicted by manipulating the "
        "y-axis only. The following example shows the card with a height of 6dp.\n\n"

        "Resting elevation.\n\n"

        "All material objects, regardless of size, have a resting elevation, or default elevation "
        "that does not change. If an object changes elevation, it should return to its resting "
        "elevation as soon as possible.\n\n"

        "Component elevations.\n\n"

        "The resting elevation for a component type is consistent across apps (e.g., FAB elevation "
        "does not vary from 6dp in one app to 16dp in another app).\n"
        "Components may have different resting elevations across platforms, depending on the depth "
        "of the environment (e.g., TV has a greater depth than mobile or desktop).\n\n"

        "Responsive elevation and dynamic elevation offsets.\n\n"

        "Some component types have responsive elevation, meaning they change elevation in response "
        "to user input (e.g., normal, focused, and pressed) or system events. These elevation "
        "changes are consistently implemented using dynamic elevation offsets.\n"
        "Dynamic elevation offsets are the goal elevation that a component moves towards, relative "
        "to the component’s resting state. They ensure that elevation changes are consistent "
        "across actions and component types. For example, all components that lift on press have "
        "the same elevation change relative to their resting elevation.\n"
        "Once the input event is completed or cancelled, the component will return to its resting "
        "elevation.\n\n"

        "Avoiding elevation interference.\n\n"

        "Components with responsive elevations may encounter other components as they move between "
        "their resting elevations and dynamic elevation offsets. Because material cannot pass "
        "through other material, components avoid interfering with one another any number of ways, "
        "whether on a per component basis or using the entire app layout.\n"
        "On a component level, components can move or be removed before they cause interference. "
        "For example, a floating action button (FAB) can disappear or move off screen before a "
        "user picks up a card, or it can move if a snackbar appears.\n"
        "On the layout level, design your app layout to minimize opportunities for interference. "
        "For example, position the FAB to one side of stream of a cards so the FAB won’t interfere "
        "when a user tries to pick up one of cards.\n\n"
    </string>
</resources>
